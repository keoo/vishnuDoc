<?xml version="1.0" encoding="UTF-8"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" label="UMS.apim#MAN(admin);UMS.apim#CPP(admin);UMS.apim#PYTHON(admin);IMS.apim#MAN(admin);IMS.apim#CPP(admin);IMS.apim#PYTHON(admin)">
  <info>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Isnard</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Daouda</firstname>
        <surname>Traoré</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Eugène</firstname>
        <surname>Pamba Capo-Chichi</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Kevin</firstname>
        <surname>Coulomb</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Ibrahima</firstname>
        <surname>Cissé</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Rodrigue</firstname>
        <surname>Chakode</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Depardon</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Haïkel</firstname>
        <surname>Guémar</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Amine</firstname>
        <surname>Bsila</surname>
      </personname>
    </author>
    <title>VISHNU - Le guide de l'administrateur</title>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>08/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>

<para>Version initiale pour le module UMS uniquement</para></revdescription>
      </revision>
      <revision>
        <revnumber>2</revnumber>
        <date>18/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>

<para>Ajout du lancement manuel avec forwarder et d'image de fichiers de configuration exemple</para></revdescription>
      </revision>
      <revision>
        <revnumber>3</revnumber>
        <date>22/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>

<para>Ajout des web services</para></revdescription>
      </revision>
      <revision>
        <revnumber>4</revnumber>
        <date>11/05/2011</date>
        <authorinitials>K. COULOMB, B.ISNARD</authorinitials>
        <revdescription>



<para>Réécriture du lancement avec fichier de configuration.</para><para>Ajout d'un paragraphe pour le sendmail.</para><para>Ajout de l'administration de TMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>5</revnumber>
        <date>18/05/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>

<para>Ajout du parametre de configuration dbConnectionsNb.</para></revdescription>
      </revision>
      <revision>
        <revnumber>6</revnumber>
        <date>10/06/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>

<para>Documentation pour IMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>7</revnumber>
        <date>15/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>

<para>Documentation pour FMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>8</revnumber>
        <date>22/06/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>

<para>Ajout de l'option ENABLE_SWIG.</para></revdescription>
      </revision>
      <revision>
        <revnumber>9</revnumber>
        <date>24/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>

<para>Ajout de l'option vishnuMachineId dans les fichiers de
configuration de UMS, IMS et FMS .</para></revdescription>
      </revision>
      <revision>
        <revnumber>10</revnumber>
        <date>13/07/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>

<para>Mise à jour du document suites aux premiers retours .</para></revdescription>
      </revision>
      <revision>
        <revnumber>11</revnumber>
        <date>11/08/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
<para>Prise en compte du gestionnaire de resources SLURM</para></revdescription>
      </revision>
      <revision>
        <revnumber>12</revnumber>
        <date>23/08/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
<para>Ajout d'un lien sur des sites expliquant comment installer une base de
données postgresql/mysql. Suppression des informations de mise à jour de la
base (maintenant le script de création contient tout). Ajout d'une
référence vers 'VISHNU_API'</para></revdescription>
      </revision>
      <revision>
        <revnumber>13</revnumber>
        <date>14/12/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
<para>
Mise à jour pour les nouveaux forwarder de DIET.
</para></revdescription>
      </revision>
      <revision>
        <revnumber>14</revnumber>
        <date>15/12/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
<para>
Mise à jour de la section configuration des clés ssh requises pour FMS.
</para></revdescription>
      </revision>
      <revision>
        <revnumber>15</revnumber>
        <date>16/12/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
<para>
Ajout de la section configuration des clés ssh requises pour TMS.
</para></revdescription>
      </revision>
      <revision>
        <revnumber>16</revnumber>
        <date>30/01/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
<para>
Modifie les requirements en fonction de la version de DIET
</para></revdescription>
      </revision>
      <revision>
        <revnumber>17</revnumber>
        <date>27/02/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
<para>
Liste les libs de boost nécessaire
</para></revdescription>
      </revision>
      <revision>
        <revnumber>18</revnumber>
        <date>02/03/2012</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
<para>Prise en compte du gestionnaire de resources LSF</para></revdescription>
      </revision>
      <revision>
        <revnumber>19</revnumber>
        <date>22/03/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
<para>Ajout pour le support de LDAP</para></revdescription>
      </revision>
      <revision>
        <revnumber>20</revnumber>
        <date>11/04/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
<para>Prise en compte du gestionnaire de resources Grid Engine</para></revdescription>
      </revision>
      <revision>
        <revnumber>21</revnumber>
        <date>30/05/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
<para>Ajout des versions de LoadLeveler, GLIBC pour libcrypt et ssh</para></revdescription>
      </revision>
      <revision>
        <revnumber>22</revnumber>
        <date>27/08/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
<para>Nouvelle compilation avec les batchs</para></revdescription>
      </revision>
      <revision>
        <revnumber>23</revnumber>
        <date>01/10/2012</date>
        <authorinitials>R. Chakode</authorinitials>
        <revdescription>
<para>Ajout des prérequis en termes de connaissances systèmes et raffinement
de la procédure d'installation</para></revdescription>
      </revision>
      <revision>
        <revnumber>24</revnumber>
        <date>08/11/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
<para>Ajout d'un paragraphe sur l'utilisation d'une base de données distante</para></revdescription>
      </revision>
      <revision>
        <revnumber>25</revnumber>
        <date>08/11/2012</date>
        <authorinitials>A. BSILA</authorinitials>
        <revdescription>
<para>Prise en compte du gestionnaire de resources PBSPro</para></revdescription>
      </revision>
      <revision>
        <revnumber>26</revnumber>
        <date>21/11/2012</date>
        <authorinitials>K. Coulomb</authorinitials>
        <revdescription>
<para>Première MAJ pour ZeroMQ</para></revdescription>
      </revision>
      <revision>
        <revnumber>27</revnumber>
        <date>04/01/2013</date>
        <authorinitials>B. Depardon</authorinitials>
        <revdescription>
<para>Maj documentation du dispatcher</para></revdescription>
      </revision>
      <revision>
        <revnumber>28</revnumber>
        <date>15/01/2013</date>
        <authorinitials>H. Guémar</authorinitials>
        <revdescription>

<para>
Ajout d'une FAQ pour la résolution des problèmes d'administration.
Ajout d'une entrée dans la FAQ à propos du chargement des plugins TMS
</para></revdescription>
      </revision>
      <revision>
        <revnumber>29</revnumber>
        <date>15/01/2013</date>
        <authorinitials>R. Chakode</authorinitials>
        <revdescription>

<para>Mise à jour des dépendences d'installation avec ZeroMQ et
suppression du chapite lié aux web services</para></revdescription>
      </revision>
      <revision>
        <revnumber>30</revnumber>
        <date>28/01/2013</date>
        <authorinitials>A. Bsila</authorinitials>
        <revdescription>

<para>Présentation des tests automatiques</para></revdescription>
      </revision>
      <revision>
        <revnumber>31</revnumber>
        <date>26/02/2013</date>
        <authorinitials>R. Chakode</authorinitials>
        <revdescription>

<para>Ajout documentation pour le support des gestionnaires de cloud</para></revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Présentation du document</title>
    <section>
      <title>Objectifs du document</title>
      <para>
Ce document décrit l'installation, la configuration et l'administration
des différents composants de la suite logicielle VISHNU.
</para>
    </section>
    <section>
      <title>Prérequis</title>
      <para>
Pour s'assurer un bon confort lors de la lecture de ce document, le lecteur
doit au moins avoir des connaissances basiques en administration système
en environnement GNU/Linux. En particulier et selon votre système d'exploitation,
la maitrise d'un outil de gestion de paquets tels que
<emphasis>apt-get</emphasis>, <emphasis>dpkg</emphasis>, <emphasis>rpm</emphasis>,
<emphasis>yum</emphasis> ou <emphasis>zypper</emphasis>
est vivement recommandée pour faciliter la recherche et l'installation des
dépendances logicielles de VISHNU.
</para>
      <para>Par ailleurs, vous devez avoir bien compris l'architecture de déploiement
de VISHNU. Cf. chapitre 4 du document [ARCH].</para>
    </section>
    <section>
      <title>Structure du document</title>
      <para>Ce document contient les parties suivantes:
</para>
      <para>
<itemizedlist>
          <listitem>
            <para>Définitions</para>
          </listitem>
          <listitem>
            <para>Installation</para>
          </listitem>
          <listitem>
            <para>Déploiement</para>
          </listitem>
          <listitem>
            <para>Administration</para>
          </listitem>
          <listitem>
            <para>Référence des commandes (en anglais)</para>
          </listitem>
          <listitem>
            <para>Référence de l'API C++ (en anglais)</para>
          </listitem>
          <listitem>
            <para>Référence de l'API Python (en anglais)</para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Documents de références</title>
      <itemizedlist>
        <listitem>
          <para>[ARCH] D1.1g-VISHNU Technical Architecture : description de l'architecture de l'application VISHNU</para>
        </listitem>
        <listitem>
          <para>[VISHNU_USERMANUAL] VISHNU User Manual : guide de l'utilisateur VISHNU.</para>
        </listitem>
        <listitem>
          <para>[VISHNU_API] VISHNU API : API VISHNU contenant les signatures et la définition des objets.</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <chapter>
    <title>Acronymes et Glossaire</title>
    <section>
      <title>Terminologies</title>
      <itemizedlist>
        <listitem>
          <para>Sysfera-DS : Désigne la suite de logiciel open source développé par SysFera
pour simplifier et l'utilisation des ressources de calcul à grande échelle.
La suite comprend VISHNU, SysFera WebBoard et DIET.
</para>
        </listitem>
        <listitem>
          <para>VISHNU est une boite à outil qui permet la fédération et l'accès unifié
à des plateformes de calcul distribués (clusters, grilles et cloud).
</para>
        </listitem>
        <listitem>
          <para>FMS (File Management Service): désigne le système de gestion de données dans
VISHNU.</para>
        </listitem>
        <listitem>
          <para>IMS (Information Management Service): désigne le système de gestion
d'information dans VISHNU.</para>
        </listitem>
        <listitem>
          <para>TMS : Task Management Service ou système de gestion de tâches</para>
        </listitem>
        <listitem>
          <para>UMS : User Management Service ou système de gestion des utilisateurs</para>
        </listitem>
        <listitem>
          <para>SeD FMS : désigne l'exécutable qui supporte le service FMS. </para>
        </listitem>
        <listitem>
          <para>SeD IMS : désigne l'exécutable qui supporte le service VISHNU. </para>
        </listitem>
        <listitem>
          <para>SeD TMS : désigne l'exécutable qui supporte le service TMS. </para>
        </listitem>
        <listitem>
          <para>SeD UMS : désigne l'exécutable qui supporte le service UMS. </para>
        </listitem>
        <listitem>
          <para>Client FMS : désigne l'ensemble des programmes pour accéder
aux services FMS. </para>
        </listitem>
        <listitem>
          <para>Client IMS : désigne l'ensemble des programmes pour accéder aux services IMS. </para>
        </listitem>
        <listitem>
          <para>Client TMS : désigne l'ensemble des programmes qui permettent d'accéder
aux services offerts par le Sed TMS. </para>
        </listitem>
        <listitem>
          <para>Client UMS : désigne l'ensemble pour accéder aux services UMS. </para>
        </listitem>
        <listitem>
          <para>
Dispatcher: est un composant de VISHNU ayant pour rôle de simplifier la configuration
des clients dans des achitectures complexes. Comme décrit dans le document d'architecture [ARCH],
il sert de broker entre les clients et différents batch schedulers dont il rend
l'accès transparent pour les utilisateurs.
</para>
        </listitem>
        <listitem>
          <para>
Supervisord est un outil de supervision externe que l'on peut intégrer dans
l'environnement de déploiement pour contrôler le démarrage, l'arrêt et le
redemarrage automatique des services.
</para>
        </listitem>
        <listitem>
          <para>LDAP : Lightweight Directory Access Protocol, est un protocole de gestion
d'annuaires.</para>
        </listitem>
        <listitem>
          <para>SQL (Structured Query Language) : est un langage avancée de requêtes sur
les bases de données.</para>
        </listitem>
        <listitem>
          <para>ZeroMQ aussi appelé ZMQ est une bibliothèque de communication par passage
de messages asynchrones utilisé dans VISHNU pour assurer la communication entre
les différents composants (clients, SeD et Dispatcher).</para>
        </listitem>
        <listitem>
          <para>Préfrontale : c'est une machine mise en amont des frontales des serveurs de calcul. </para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <chapter>
    <title>Installation à partir des sources</title>
    <para>Ce chapitre décrit l'installation de VISHNU à partir des sources.
</para>
    <section>
      <title>Prérequis</title>
      <para>La compilation nécessite les bibliothèques suivantes :
</para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Dépendances obligatoires</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>GCC : Version 4.4.3 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para>CMAKE : Version 2.8 ou ultérieure.</para>
              <para>GNU Make ou Ninja: Générateurs exécutables. Comme alternative à Make, le générateur Ninja
est plus rapide et est utile pour réduire la durée de compilation.Surtout quand vous avez besoin
de compiler plusieurs modules de VISHNU sur la même machine.
</para>
            </listitem>
            <listitem>
              <para>BOOST 1.46.1 ou ultérieure. Au moins les modules <emphasis>program_options</emphasis>, 
<emphasis>date_time, thread, filesystem, system, unit_test_framework, serialization, random</emphasis> 
et <emphasis>regex</emphasis> doivent être installés
</para>
            </listitem>
            <listitem>
              <para>ZeroMQ 2.x. Non supporté avec les versions 3.x</para>
            </listitem>
            <listitem>
              <para>libuuid : est une dépendance de ZeroMQ</para>
            </listitem>
            <listitem>
              <para>GLIBC 2.7 ou ultérieure</para>
            </listitem>
            <listitem>
              <para>OpenSSH 4.2 ou ultérieure</para>
            </listitem>
            <listitem>
              <para>Moteur de base de données :</para>
              <itemizedlist>
                <listitem>
                  <para>PostGreSQL 8.0 minimum, ou</para>
                </listitem>
                <listitem>
                  <para>MySQL 5.1 minimum</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Dépendances spécifiques pour le module UMS</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>OpenLDAP 2.4 ou ultérieure</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Dépendances spécifiques pour IMS</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>Sigar 1.6.4 disponible sur sourceforge (http://sourceforge.net/projects/sigar/files/sigar/1.6/)</para>
            </listitem>
            <listitem>
              <para>Supervisord 3.0.a, installable à partir des outils Python (ex. pip install supervisor)</para>
            </listitem>
            <listitem>
              <para>Xmlrpc-c 2.1.19
</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Dépendances spécifiques aux batch schedulers</emphasis></para>
          <para>Sauf indication contraire, seules les versions indiquées sont officiellement supportées car ayant fait l'objet de tests. </para>
          <itemizedlist>
            <listitem>
              <para>Torque 2.3.6</para>
            </listitem>
            <listitem>
              <para>IBM LoadLeveler 2.x ou 3.x</para>
            </listitem>
            <listitem>
              <para>SLURM 2.2.x, 2.3.x ou 2.4.x</para>
            </listitem>
            <listitem>
              <para>LSF 7.0.6.134609</para>
            </listitem>
            <listitem>
              <para>Grid Engine 2011.11</para>
            </listitem>
            <listitem>
              <para>PBSPro 10.4</para>
            </listitem>
            <listitem>
              <para>Detalcloud 1.x. Le support de Deltacloud nécessite la bibliothèque Libdeltacloud Client pour C et C++, version 0.9 ou supérieure.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Dépendences nécessaires à la génération des APIs Python et Java</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>SWIG 1.3.40 (ATTENTION : la version 2 de SWIG n'est pas supporté).</para>
            </listitem>
            <listitem>
              <para>JAVA SDK 1.6.</para>
            </listitem>
            <listitem>
              <para>Python 2.6</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Compilation des sources </title>
      <para>
VISHNU utilise CMake comme système de construction. Les différentes fonctionnalités
sont activées ou désactivées à la demande grâce à des variables Cmake spécifiques.
Positionnée à <emphasis>ON</emphasis> une variable permet d'activer la fonctionnalité
associée. Ex. -DCOMPILE_UMS=ON active la compilation du module UMS.
Un positionnement à <emphasis>OFF</emphasis> désactive la compilation de la fonctionnalité.
Ex. -DCOMPILE_UMS=ON désactive la compilation du module UMS.
</para>
      <para>
Dans certains cas on peut avoir besoin de mots-clés spécifiques pour activer une fonctionnalité.
Ex. -DVISHNU_BATCH=SLURM permet de sélectionner SLURM comme batch scheduler sous-jacent à TMS.
</para>
      <para>
La liste ci-dessous décrit les variables disponibles :
<itemizedlist>
          <listitem>
            <para>
COMPILE_CLIENT_CLI permet, si on le souhaite, de compiler les binaires clients en ligne de commande.
Par défault seules les libs sont compilées.
</para>
          </listitem>
          <listitem>
            <para>
COMPILE_SERVERS permet si on le souhaite de compiler les serveurs.
Par défault ils ne sont pas compilés.
</para>
          </listitem>
          <listitem>
            <para>
CMAKE_INSTALL_PREFIX définit le répertoire d'installation. Par défault l'installation est
réalisée dans <emphasis>/usr/local</emphasis>.
</para>
          </listitem>
          <listitem>
            <para>COMPILE_UMS indique si le module UMS sera compilé.</para>
            <para>Ce module est activé par défault (-DCOMPILE_UMS=ON).
</para>
          </listitem>
          <listitem>
            <para>
COMPILE_FMS spécifie si le module FMS sera compilé. </para>
            <para>FMS est désactivé par défaut (-DCOMPILE_FMS=OFF),
lorsqu'il est activé le module COMPILE_UMS dont il dépend doit être également activé (-DCOMPILE_UMS=ON).
</para>
          </listitem>
          <listitem>
            <para>
COMPILE_TMS permet de préciser si le module TMS sera compilé. </para>
            <para>
Par défaut désactivé, si TMS est activé (-DCOMPILE_TMS=ON), alors les modules UMS et FMS dont il
dépend doivent être égalements activés (-DCOMPILE_UMS=ON et -DCOMPILE_FMS=ON).
</para>
            <para>Par ailleurs lorsque TMS est activé, on doit obligatoirement sélectionner un batch scheduler
grâce aux options VISHNU_BATCH et VISHNU_BATCH_VERSION (ex. VISHNU_BATCH=SLURM et VISHNU_BATCH_VERSION=2.2).
</para>
          </listitem>
          <listitem>
            <para>
COMPILE_IMS indique si le module IMS sera compilé. </para>
            <para>IMS est désactivé par défaut. Lorsqu'il est activé, tous les autres modules doivent
l'être également (-DCOMPILE_UMS=ON, -DCOMPILE_TMS=ON et -DCOMPILE_FMS=ON).
</para>
          </listitem>
          <listitem>
            <para>
ENABLE_PYTHON : Désactivée par défaut cette option permet d'activer ou non la compilation du code PYTHON.
</para>
          </listitem>
          <listitem>
            <para>
ENABLE_JAVA : Désactivée par défaut cette option permet d'activer ou non la compilation du code JAVA.
</para>
          </listitem>
          <listitem>
            <para>
ENABLE_LDAP permet d'activer le support LDAP pour l'authentification. Cette option est désactivée par défaut.
</para>
          </listitem>
          <listitem>
            <para>
ENABLE_SWIG permet d'activer la generation du code des adapteurs PYTHON et JAVA.
</para>
            <para>Désactivée par défaut cette option doit obligatoirement être activée si on choisit de ne pas compiler
tous les modules VISHNU. C'est-à-dire lorsqu'au moins l'une des options COMPILE_UMS, COMPILE_TMS, COMPILE_FMS
ou COMPILE_IMS est à OFF. Par ailleurs, l'activation de cette option nécessite que SWIG ait été installé au préalable.
</para>
          </listitem>
          <listitem>
            <para>VISHNU_BATCH indique le batch scheduler à activer (TORQUE par défaut).</para>
            <para>Selon l'installation de votre batch scheduler et la configuration de votre système, il peut être nécessaire de 
positionner manuellement des variables cmake supplémentaires pour faciliter la recherche des fichier d'entête et les 
bibliothèques dynamiques ou statiques nécessaires à la compilation et l'édition de liens. 
Leurs valeurs doivent être des chemins absolus. Ainsi:</para>
            <itemizedlist>
              <listitem>
                <para>
Pour le scheduler Tivoli LoadLeveler, LOADLEVELER_INCLUDE_DIR doit pointer vers le repertoire contenant le fichier llapi.h tandis que LOADLEVELER_LIB 
doit pointer vers le fichier libllapi.so ou le fichier le libllapi.a.
</para>
              </listitem>
              <listitem>
                <para>
Pour TORQUE, la variable TORQUE_INCLUDE_DIR doit pointer vers le dossier contenant le fichier pbs_ifl.h tandis que TORQUE_LIB doit pointer 
vers le fichier libtorque.so ou le fichier libtorque.a.
</para>
              </listitem>
              <listitem>
                <para>
Pour SLURM, la variable SLURM_INCLUDE_DIR doit pointer vers le repertoire contenant slurm/slurm.h tandis que SLURM_LIB doit pointer vers le chemin absolu 
du libslurm.so ou le fichier libslurm.a.
</para>
              </listitem>
              <listitem>
                <para>
Pour LSF, les variables LSF_INCLUDE_DIR, LSBATCH_LIB et LSBATCH_LIB doivent être définies. La variable LSF_INCLUDE_DIR doit pointer vers 
le chemin absolu du repertoire contenant le fichier lsf/lsbatch.h, LSBATCH_LIB doit pointer vers le chemin absolu du fichier libbat.so ou du fichier libbat.a. 
Tandis que la variable LSBATCH_LIB doit pointer vers la bibliothèque libbat.so ou libbat.so.
</para>
              </listitem>
              <listitem>
                <para>
Pour les Batch schedulers basés sur Grid Engine, les variables SGE_ROOT, SGE_INCLUDE_DIR, SGE_BIN_DIR, SGE_BIN_DIR et SGE_LIB doivent être défines. 
La valeur de SGE_ROOT doit à la racine du dossier d'installation du batch scheduler; SGE_INCLUDE_DIR doit pointer vers le dossier contenant le fichier d'entête 
drmaa.h; SGE_BIN_DIR doit pointer vers le repertoire contenant les fichiers binaires. tandis que SGE_LIB doit pointer vers la bibliothèque libdrmaa.so ou libdrmaa.a.
</para>
              </listitem>
              <listitem>
                <para>
Pour PBS PRO, les variables PBS_INCLUDE_DIR et PBS_LIB doivent être défines comme suit. PBS_INCLUDE_DIR doit pointer vers le repertoire contenant le fichier 
d'entête pbs_ifl.h, tandis que PBS_LIB doit pointer vers la bibliothèque libpbs.so ou libpbs.a.
</para>
              </listitem>
              <listitem>
                <para>
Pour Deltacloud, les variables LIBDELTACLOUD_INCLUDE_DIR et LIBDELTACLOUD_LIB doivent être défines comme suit. LIBDELTACLOUD_INCLUDE_DIR doit 
pointer vers le repertoire contenant les fichiers d'entête de LibDeltacloud, tandis que LIBDELTACLOUD_LIB doit pointer vers la bibliothèque libdeltacloud.so 
ou libdeltacloud.a.
</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>
VISHNU_BATCH_VERSION indique la version du batch scheduler utilisé
</para>
          </listitem>
          <listitem>
            <para>
BUILD_TESTING: Désactivée par défaut, cette variable spécifie si le module de test sera compilé.
</para>
          </listitem>
        </itemizedlist>
</para>
      <para>
Ci-dessous nous décrirons les étapes pour installer les clients et les serveurs d'UMS et TMS dans /opt/vishnu.
TORQUE est utilisé comme backend à TMS. La compilation des APIs Python sera également activée.
</para>
      <itemizedlist>
        <listitem>
          <para>1. Créer un répertoire build à la racine du projet et s'y placer</para>
          <para>$ <emphasis>mkdir build</emphasis></para>
          <para>$ <emphasis>cd build</emphasis></para>
        </listitem>
        <listitem>
          <para>2. Générer le Makefile </para>
          <itemizedlist>
            <listitem>
              <para>En utilisant Make</para>
              <para>$ <emphasis>cmake -DCMAKE_INSTALL_PREFIX=/opt/vishnu .. \</emphasis></para>
              <para><emphasis>-DENABLE_SWIG=ON \</emphasis></para>
              <para><emphasis>-DENABLE_PYTHON=ON \</emphasis></para>
              <para><emphasis>-DCOMPILE_UMS=ON \</emphasis></para>
              <para><emphasis>-DCOMPILE_TMS=ON \</emphasis></para>
              <para><emphasis>-DVISHNU_BATCH=TORQUE \</emphasis></para>
              <para><emphasis>-DVISHNU_BATCH_VERSION=2.3 \</emphasis></para>
              <para><emphasis>-DTORQUE_DIR=/opt/torque</emphasis></para>
              <para><emphasis>-DCOMPILE_CLIENT_CLI=ON</emphasis></para>
              <para><emphasis>-DCOMPILE_SERVERS=ON</emphasis></para>
            </listitem>
            <listitem>
              <para>En utilisant Ninja : changement du générateur via le flag CMAKE_GENERATOR.</para>
              <para>$ <emphasis>cmake -DCMAKE_INSTALL_PREFIX=/opt/vishnu .. \</emphasis></para>
              <para><emphasis>-DENABLE_SWIG=ON \</emphasis></para>
              <para><emphasis>-DENABLE_PYTHON=ON \</emphasis></para>
              <para><emphasis>-DCOMPILE_UMS=ON \</emphasis></para>
              <para><emphasis>-DCOMPILE_TMS=ON \</emphasis></para>
              <para><emphasis>-DVISHNU_BATCH=TORQUE \</emphasis></para>
              <para><emphasis>-DVISHNU_BATCH_VERSION=2.3 \</emphasis></para>
              <para><emphasis>-DTORQUE_DIR=/opt/torque \</emphasis></para>
              <para><emphasis>-DCOMPILE_CLIENT_CLI=ON</emphasis></para>
              <para><emphasis>-DCOMPILE_SERVERS=ON</emphasis></para>
              <para><emphasis role="bold">-DCMAKE_GENERATOR=Ninja</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>3. Lancer la compilation</para>
          <itemizedlist>
            <listitem>
              <para>En utilisant Make</para>
              <para>$ <emphasis>make -j 2</emphasis></para>
              <para>L'option -j 2 permet de lancer la compilation avec deux processus</para>
            </listitem>
            <listitem>
              <para>En utilisant Ninja</para>
              <para>$ <emphasis>ninja -j 2</emphasis></para>
              <para>L'option -j 2 permet de lancer la compilation avec deux processus</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>4. Installer les binaires</para>
          <para>$ <emphasis>make install</emphasis></para>
          <para>Cette étape peut nécessiter des droits d'administrateur.</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Note</emphasis>: pensez à ajouter le répertoire
d'installation dans le $PATH</para>
    </section>
    <section>
      <title>Vérifier l'installation</title>
      <para>
En supposant que la variable d'environnement INSTALL_PREFIX pointe à la racine
du repertoire d'installation (/opt/vishnu dans notre exemple), vous devez avoir les
programmes suivants en fonction des modules installés:
<itemizedlist>
          <listitem>
            <para>
$INSTALL_PREFIX/sbin/dispatcher : binaire du Dispatcher
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/sbin/umssed : binaire du SeD UMS
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/sbin/fmssed : binaire du SeD FMS
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/sbin/tmssed : binaire du SeD TMS
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/sbin/imssed : binaire du SeD IMS
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/bin : contient les clients ligne de commande dont les noms sont
préfixés par <emphasis>vishnu_*</emphasis>.
</para>
            <para>
Ex. vishnu_connect est le client ligne de commande pour se connecter à VISHNU.
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/lib : contient les librairies dynamiques nommées sous la
forme <emphasis>libvishnu*</emphasis>.
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/share : contient les pages de manuel pour les différents
programmes ligne de commande.
</para>
          </listitem>
          <listitem>
            <para>
$INSTALL_PREFIX/etc : contient des exemples de fichiers de configuration.
</para>
          </listitem>
        </itemizedlist>
</para>
    </section>
  </chapter>
  <chapter>
    <title>Configuration de la base de données</title>
    <para>Les fichiers de configuration de la base de données sont disponibles dans
le répertoire core/database du package d'installation VISHNU. Seules des bases
de données PostgreSQL ou MySQL sont actuellement supportées. Une seule base de
données est nécessaire et suffisante pour l'ensemble des composants d'une
infrastructure VISHNU (UMS, TMS, IMS et IMS).</para>
    <section>
      <title>Utiliser une base de données MySQL</title>
      <para>Nous supposons ici que vous avez déjà une installation de MySQL opérationnelle.
Si ce n'est pas le cas, référez-vous à la documentation officielle pour procéder à
l'installation.
</para>
      <para>Vous devez également disposer des droits d'administration sur cette
installation (connexion à MySQL en tant l'utilisateur 'root').</para>
      <para>Vous aurez besoin des scripts <emphasis>mysql_create.sql</emphasis>
et <emphasis>database_init.sql</emphasis> disponibles dans le dossier
<emphasis>./core/database</emphasis> de l'arborescence des sources.
Le premier script (<emphasis>mysql_create.sql</emphasis>) sert à créer
les tables de la base de données tandis que le second sert à initialiser
les données de la base.
</para>
      <para>Pour la création de la base de données VISHNU, suivez les étapes suivantes :
<itemizedlist>
          <listitem>
            <para>Se connecter au serveur MySQL en tant que root :</para>
            <para>$ <emphasis>mysql -h mysql@server- -u root -p </emphasis> # replacer mysql@server par l'adresse de votre serveur MySQL</para>
          </listitem>
          <listitem>
            <para>Créer la base de données Vishnu</para>
            <para>$ <emphasis>create database vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Se connecter sur la base de données</para>
            <para>$ <emphasis>use vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Créer les tables</para>
            <para>$ <emphasis>source /path/to/mysql_create.sql</emphasis></para>
          </listitem>
          <listitem>
            <para>Initialiser la base de données</para>
            <para>$ <emphasis>source /path/to/database_init.sql</emphasis></para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Utiliser une base de données PostGreSQL</title>
      <para>Nous supposons également que vous avez déjà une installation de PostGreSQL
opérationnelle. Si ce n'est pas le cas, référez-vous à la documentation officielle pour
procéder à l'installation.</para>
      <para>Vous devez également disposer des droits d'administration sur cette installation
(accès en tant qu'utilisateur système 'postgres').
</para>
      <para>Pour une nouvelle installation de la base de données, les scripts
<emphasis>postgre_create.sql</emphasis> et <emphasis>database_init.sql</emphasis>
doivent respectivement être utilisés pour créer et initialiser la base de données.
</para>
      <para>Pour créer et initialiser la base de données, exécuter les étapes
suivantes à partir de votre serveur PostGreSQL :
<itemizedlist>
          <listitem>
            <para>Se connecter en tant que l'utilisateur 'postgres' (root):</para>
            <para>$ <emphasis>su postgres</emphasis></para>
          </listitem>
          <listitem>
            <para>Créer la base de données vishnu</para>
            <para>$ <emphasis>createdb -h localhost vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Se connecter à la base de données</para>
            <para>$ <emphasis>psql -h localhost vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Créer le schéma de la base de données</para>
            <para>$ <emphasis>\i /path/to/postgre_create.sql </emphasis></para>
          </listitem>
          <listitem>
            <para>Initialiser la base de données</para>
            <para>$ <emphasis>\i /path/to/database_init.sql</emphasis></para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Utilisation de TMS en mode natif: TMS Posix Shell</title>
      <para>
Après installation, il est possible d'utiliser les fonctionnalités de TMS sur une machine
ne possédant pas de batch scheduler sous-jacent. Pour ce faire, il faut mettre le batch
scheduler à la valeur &quot;POSIX&quot; lors de la compilation. Le flag dans le fichier de configuration
du serveur TMS sera également POSIX. Il faut noter que lors de la compilation de
VISHNU pour un batch scheduler classique, ce pseudo batch est automatiquement compilé,
et l'utilisateur peut lors du submit explicitement demander à soumettre sur le batch
posix en utilisant l'option -p. Sinon, c'est systématiquement le vrai batch scheduler
auquel vishnu soumet. Cela implique que d'un point de vue système, vishnu a constamment
3 processus 'tmssed' dans le cas d'un batch scheduler classique, un premier qui est le
serveur réalisant les services, et les 2 autres correspondent à des moniteurs utilisés
par vishnu (pour interroger les batchs schedulers sous-jacents) pour avoir les données
à jour associées aux jobs. De plus, afin de gérer les jobs utilisateurs et pouvoir les
annuler, pour chaque utilisateur ayant un job, cet utilisateur aura un démon qui
tournera, pourra controller les jobs, et fournir des informations au moniteur au
travers d'une socket unix.
</para>
    </section>
    <section>
      <title>Utilisation de LDAP</title>
      <para>Nous supposons que vous avez déjà une installation de LDAP opérationnelle.
Si ce n'est pas le cas, référer vous à la documentation officielle pour procéder à
l'installation. Vous pouvez également installer ces dépendances à partir du
gestionnaire de paquets de votre système. Sur les systèmes basés sur Debian
par exemple, vous devez installer les paquets suivants: <emphasis>slapd,
libldap-2.4-2, libldap2-dev</emphasis> et <emphasis>ldap-utils</emphasis></para>
      <para>Pour pouvoir utiliser l'authentification avec LDAP, le flag de compilation
ENABLE_LDAP doit être activé à la compilation. Une fois VISHNU compilé,
une option de configuration du serveur UMS doit être mise dans le fichier de
configuration. Cette option est nommée 'authenticationType' et peut actuellement
supporter 4 valeurs :
<itemizedlist>
          <listitem>
            <para>
UMS : Authentifie uniquement en utilisant la base de données
</para>
          </listitem>
          <listitem>
            <para>
LDAPUMS : Pour chaque couple (nom d'utilisateur, mot de passe), essaye
d'authentifier avec LDAP en premier puis avec UMS
</para>
          </listitem>
          <listitem>
            <para>
UMSLDAP : Pour chaque couple (nom d'utilisateur, mot de passe), essaye
d'authentifier avec UMS en premier puis avec LDAP
</para>
          </listitem>
          <listitem>
            <para>
LDAP : Authentifie uniquement en utilisant LDAP
</para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Utilisation d'une base de données distante</title>
      <para>
VISHNU repose sur une base de données. Les serveurs de VISHNU ont besoin de
s'y connecter pour fonctionner. Lorsqu'il n'y a aucune restriction sur les
ports accessibles entre différentes machines (cas fréquent dans un réseau
local), il n'y a généralement pas de problème pour se connecter à une base
de données distante en spécifiant correctement le databaseHost dans les
fichiers de configuration des éléments de VISHNU.
Dans le cas où il y a des restrictions sur les ports ouverts, ou dans le cas
de réseaux complexes avec du NAT par exemple, il est souvent plus facile de
passer par des tunnels ssh pour encapsuler les connexions vers la base de
données.

Nous avons deux cas différents pour ouvrir le tunnel. Supposons que la
base de donnéesx soit sur une machine A, et l'élément Vishnu sur une machine B.
Nous pouvons ouvrir le tunnel depuis A ou depuis B (parfois seule une de
ces deux configuration est possible dans le cas où le ssh ne passe que dans
un sens).
Nous supposons que le port d'écoute de la base de données est 3306.
</para>
      <itemizedlist>
        <listitem>
          <para>
Ouverture depuis la machine A vers la machine B, il faut ouvrir un tunnel
&quot;reverse&quot; :
</para>
          <para>
ssh -t -t -R 3306:localhost:3306 user@B
</para>
        </listitem>
        <listitem>
          <para>
Ouverture depuis la machine B vers la machine A, il faut ouvrir un tunnel
&quot;forward&quot; :
</para>
          <para>
ssh -t -t -L 3306:localhost:3306 user@A
</para>
        </listitem>
      </itemizedlist>
      <para>Il convient maintenant de tester la connexion à la base de données.
Sur la machine B, essayez de vous connecter avec la commande suivante :
</para>
      <programlisting>
mysql -u vishnu_user -h 127.0.0.1 -p
</programlisting>
      <para>
Après avoir tapé le mot de passe, vous devriez vous retrouver connecté
sur la base de données sur la machine A.

Il ne vous reste plus qu'à configurer le fichier de configuration de
l'élément VISHNU avec les éléments suivants (à adapter en fonction de votre
configuration) :
</para>
      <programlisting>
databaseType=mysql
databaseHost=127.0.0.1
databaseName=vishnu
databaseUserName=vishnu_user
databaseUserPassword=vishnu_user
databaseConnectionsNb=5
</programlisting>
      <para>
Attention : si vous utilisez localhost comme nom de machine pour vous connecter
à la base de données, vous risquez de rencontrer des problèmes si mysql est installé
sur B. En effet, mysql tente de se connecter en utilisant une socket linux
(généralement /var/run/mysqld/mysqld.sock), au lieu de tenter de se connecter
à une machine distante. Utilisez bien 127.0.0.1 pour databaseHost.
</para>
    </section>
  </chapter>
  <chapter>
    <title>Configuration et démarrage des services</title>
    <section>
      <title>Résumé des programmes serveurs</title>
      <para>
Selon les modules sélectionnés, les binaires suivants doivent être disponibles sur votre système après l'installation:
<itemizedlist>
          <listitem>
            <para>
Dispatcher: $INSTALL_PREFIX/sbin/dispatcher
</para>
          </listitem>
          <listitem>
            <para>
SeD UMS: $INSTALL_PREFIX/sbin/umssed
</para>
          </listitem>
          <listitem>
            <para>
SeD FMS: $INSTALL_PREFIX/sbin/fmssed
</para>
          </listitem>
          <listitem>
            <para>
SeD TMS : $INSTALL_PREFIX/sbin/tmssed
</para>
          </listitem>
          <listitem>
            <para>
SeD IMS : $INSTALL_PREFIX/sbin/imssed
</para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Configuration des SeDs</title>
      <para>Cette section décrit les clés de configuration des différents composants de VISHNU.
Pour une première configuration, vous pouvez vous inspirer du fichier d'exemple
<emphasis>vishnu-sample.cfg</emphasis> situé dans le dossier $INSTALL_PREFIX/etc et également décrit ci-dessous. 
Tout texte après un dièse '#' est un commentaire.</para>
      <programlisting>
<![CDATA[
# This is a commented sample configuration file for VISHNU
# Copyright (c) SysFera SA
# Last update: 16/01/2013
#

# Legends:
#  (M): Indicates that a key is mandatory for all components and MUST not be empty.
#  (M<List of Components>): Indicates a key is specific and mandatory for the
#                           listed components.
#  (O): Indicates that a key is optional.
#  (O)<List of Components>: Indicates that a key is optional only for the
#                           listed components.
#  (OS<List of Components>): Indicates a key is optional and specific to
#                             the listed components.
#   E.g. (OS<TMS>) means that a key is optional and specific to the Task
#   Management System (TMS) module.
#
# Definitions
# FMS: File Management System
# IMS: Information Management System
# TMS: Task Management System
# UMS: User Management System
# FQDN: Full Qualified Domain Name


###############################################################################
#               Common Parameters                                             #
###############################################################################
# vishnuId (M<FMS,IMS,TMS,UMS>): Sets the identifier of the VISHNU instance
#
vishnuId=1

# databaseType (M<FMS,IMS,TMS,UMS>): Defines the type of the database.
# Possible values are 'mysql' or 'postgresql'
#
databaseType=mysql

# databaseHost (M<FMS,IMS,TMS,UMS>): Defines the IP address or the FQDN of the
# database server.
# Here we assume that the database and VISHNU are hosted on the same server
#
databaseHost=localhost

# databaseName (M<FMS,IMS,TMS,UMS>): Sets the name of the database instance
#
databaseName=vishnu

# databaseUserName (M<FMS,IMS,TMS,UMS>): Sets the login name for authenticating
# against the database
#
databaseUserName=vishnu

# databaseUserPassword (M<FMS,IMS,TMS,UMS>): Sets the password associated to
# the database user
#
databaseUserPassword=vishnu


###############################################################################
#                Dispatcher Related Parameters                                #
###############################################################################


# disp_uriAddr (M<Dispatcher,Client>):
#  * For Dispatcher this corresponds to the address on which it'll listen on
#    for client requests
#  * For Clients this indicates the address for connecting to the Dispacther
#
disp_uriAddr=tcp://127.0.0.1:5560

# disp_uriSubs (M<Dispatcher>|O<IMS|TMS|FMS|UMS>):
# ** For the Dispatcher, it indicates the address to listen on for SeD subscription
# ** For SeD (FMS, IMS, TMS, UMS), this corresponds to the address from which
#    the module will register itself to the Dispatcher
#
disp_uriSubs=tcp://127.0.0.1:5561

# disp_nbthread (OS<Dispatcher>):
# Sets the number of workers threads in the Dispatcher
#
# In a platform with a high number of concurrent request, increase
# the number of workers may be interesting for reducing response time.
# Conversely, if the number of concurrent requests is low, decrease the may
# preserve useless resource consumption.
#
disp_nbthread=5


###############################################################################
#                UMS Related Parameters                                       #
###############################################################################

# ums_uriAddr (M<UMS>|O<Dispatcher,Client>):
#   * For UMS, this sets the address and the port on which the UMS SeD
#     will listen on
#   * For Dispactcher and clients it indicates address(es) for connecting
#     to UMS SeDs.
#     For Dispatcher this should correspond to a list of colon-seperated pair
#     in the form of: ums_uriAddr=uri_umssed1 sed1_name;uri_umssed2 sed2_name;...
#     uri_umssed<i> correspond to valid URIs. sed<i>_name set the
#     names associated to the SeDs
#     E.g. ums_uriAddr=tcp://127.0.0.1:5562 localsed;tcp://192.168.1.1:5562 lansed
#
ums_uriAddr=tcp://127.0.0.1:5562

# sendmailScriptPath (M<UMS>): Sets the path to the script for sending emails
#
sendmailScriptPath=/opt/software/GIT/vishnu_1/core/src/utils/sendmail.py

# authenticationType (M<UMS>): Defines the underlying authentication mode
# VISHNU supports four modes of authentication:
#  * UMS: Authentication against the built-in user management system (default).
#  * LDAP: Authentication against an LDAP directory
#  * UMSLDAP: Use both modes, looking first in the native authentication database
#  * LDAPUMS: Use both modes, looking first in the LDAP directory
# If not set, UMS mode will be selected.
#
#authenticationType=UMS


###############################################################################
#                FMS Specfic Parameters                                       #
###############################################################################

# fms_uriAddr (M<FMS>|O<Dispatcher,Client>):
#   * For FMS, this sets the address and the port on which the FMS SeD
#     will listen on
#   * For Dispactcher and clients it indicates address(es) for connecting
#     to FMS SeDs.
#     For Dispatcher this should correspond to a list of colon-seperated pair
#     in the form of: fms_uriAddr=uri_fmssed1 sed1_name;uri_fmssed2 sed2_name;...
#     uri_fmssed<i> correspond to valid URIs. sed<i>_name set the
#     names associated to the SeDs
#     E.g. fms_uriAddr=tcp://127.0.0.1:5563 localsed;tcp://192.168.1.1:5563 lansed
#
fms_uriAddr=tcp://127.0.0.1:5563


###############################################################################
#                IMS Related Parameters                                       #
###############################################################################

# ims_uriAddr (M<IMS>|O<Dispatcher,Client>):
#   * For IMS, this sets the address and the port on which the IMS SeD
#     will listen on
#   * For Dispactcher and clients it indicates address(es) for connecting
#     to IMS SeDs.
#     For Dispatcher this should correspond to a list of colon-seperated pair
#     in the form of: ims_uriAddr=uri_imssed1 sed1_name;uri_imssed2 sed2_name;...
#     uri_imssed<i> should correspond to valid URIs. sed<i>_name set the
#     names associated to the SeDs.
#     E.g. ims_uriAddr=tcp://127.0.0.1:5564 localsed;tcp://192.168.1.1:5564 lansed
#
ims_uriAddr=tcp://127.0.0.1:5564


###############################################################################
#                TMS Related Parameters                                       #
###############################################################################
# tms_uriAddr (M<TMS>|O<Dispatcher,Client>):
#   * For TMS, this sets the address and the port on which the TMS SeD
#     will listen on
#   * For Dispactcher and clients it indicates address(es) for connecting
#     to TMS SeDs.
#     For Dispatcher this should correspond to a list of colon-seperated pair
#     in the form of: ims_uriAddr=uri_tmssed1 sed1_name;uri_tmssed2 sed2_name;...
#     uri_tmssed<i> correspond to valid  URIs. sed<i>_name set the
#     names associated to the SeDs.
#     E.g. tms_uriAddr=tcp://127.0.0.1:5565 localsed;tcp://192.168.1.1:5565 lansed
#
tms_uriAddr=tcp://127.0.0.1:5565

# batchSchedulerType (M<TMS>): Defines the type of the batch scheduler TMS
# will handle.
# VISHNU supports TORQUE, LOADLEVELER, SLURM, LSF, SGE and PBS
batchSchedulerType=SLURM

# intervalMonitor (M<TMS>): In seconds, this key defines the interval after
# which the jobs are monitored
#
intervalMonitor=30

# defaultBatchConfig (OS<TMS>): Sets the path to the default batch configuration
# file.
#
#defaultBatchConfig=$HOME/defaultbatch.cfg


###############################################################################
#                Other Parameters                                             #
###############################################################################

# vishnuMachineId (M<FMS,IMS,TMS>|O<UMS>): Optional for UMS and mandatory for FMS,
# IMS and TMS, this key corresponds to the identifier of the machine in VISHNU
# environment.
# When set, it MUST correspond to valid machine identifier.
#
vishnuMachineId=machine_1

# timeout (M<Dispatcher>|O<FMS,IMS,TMS,UMS>): In seconds, this defines the
# duration afer which a request is considered as expired.
#
timeout=120

#urlSupervisor (M<FMS,IMS,TMS,UMS>): Specifies the address of Supervisord
urlSupervisor=http://127.0.0.1:9001
]]>
</programlisting>
      <section>
        <title>Configuration de Supervisod</title>
        <para>
Nous vous recommandons de lancer les SeDs via Supervisord. C'est un moniteur d'exécution qui contrôle l'exécution des services 
en offrant des fonctionnalités de resilience. En effet, lorsqu'un service tombe de manière inattendue, il se charge de le redemarrer 
de manière transparente.
</para>
        <para>L'exemple ci-dessous décrit la configuration de Supervisord. Il est inspiré du fichier d'exemple <emphasis>supervisord-sample.cfg</emphasis> situé dans le dossier $INSTALL_PREFIX/etc. 
Vous pouvez vous en inspirer pour l'adapter à votre installation. Tout texte après un point-virgule ';' est un commentaire.</para>
        <programlisting>
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;; PARAMETRES LIES A LA PRISE EN CHARGE DES COMPOSANTS DE VISHNU ;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Attention: il faut bien respecter les nommages 'umssed', 'imssed',
; 'tmssed', 'fmssed'. Sinon ils ne seront pas bien pris en charge

; Définir le SeD UMS comme un processus à surveiller
; Son alias est umssed
; command indique la commande à exécuter. A modifier selon votre installation
[program:umssed]
command=umssed ~/conf/ums_config.cfg ; Commande comme on ferait dans un terminal

; Définir le SeD FMS comme un processus à surveiller
; Son alias est fmssed
; command indique la commande à exécuter. A modifier selon votre installation
[program:fmssed]
command=fmssed ~/conf/fms_config.cfg

; Définir le SeD IMS comme un processus à surveiller
; Son alias est imssed
; command indique la commande à exécuter. A modifier selon votre installation
[program:imssed]
command=imssed ~/conf/ims_config.cfg

; Définir le SeD TMS comme un processus à surveiller
; Son alias est tmssed
; command indique la commande à exécuter. A modifier selon votre installation
[program:tmssed]
command=tmssed ~/conf/tms_config.cfg

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;; PARAMETRES SPECIFIQUES A SUPERVISORD ;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Définir l'URL de connexion à Supervisord
[supervisorctl]
serverurl=http://127.0.0.1:9001

; inet (TCP) server disabled by default
; ip_address:port specifier, *:port for all if
[inet_http_server]
port=127.0.0.1:9001

</programlisting>
      </section>
      <section>
        <title>Notes spécifiques pour l'intégration TMS-DELTACLOUD</title>
        <para>
TMS est une composante clé d'une architecture VISHNU. Grâce à son architecture souple, il s'intègre dans différents types d'environnements de calcul. 
Des environnements traditionnels reposant sur des batch schedulers classiques comme LoadLeveler et SLURM, il a été étendu pour s'interfacer avec
les gestionnaires de gestionnaires de ressources virtuelles (aussi appelés gestionnaires de cloud) tels tels qu'OpenStack et OpenNebula. Basé sur Delatcloud et actuellement en version beta, cette extension n'est actuellement testée qu'avec OpenStack. 
</para>
        <para>
L'intégration avec les gestionnaires de ressources virtuelles nécessite un mode de fonctionnement interne relativement différent de ce 
qui se passe avec les batch schedulers traditionnels. En effet, étant donné que ces gestionnaires ne gèrent pas les tâches, VISHNU fournit 
des fonctionnalités supplémentaires pour assurer cette gestion. 
Conceptuellement, chaque tâche est exécutée au sein d'une machine virtuelle qui est automatiquement instanciée à cet effet. 
Cette machine virtuelle est également automatiquement détruite à la fin de tâche. Par ailleurs, pour simplifier la gestion des données d'entrée et de sortie, VISHNU permet de définir un système de fichiers NFS qui est monté automatiquement dans l'arborescence de la machine virtuelle 
au démarrage. De manière résumée, pour gérer le cycle de vie des tâches, VISHNU assure entre autres :
<itemizedlist>
            <listitem>
              <para>
L'authentifiation sur le gestionnaire de ressources virtuelles.
</para>
            </listitem>
            <listitem>
              <para>
L'instanciation et le démarrage des machines virtuelles.
</para>
            </listitem>
            <listitem>
              <para>
Le démarrage des scripts au sein des machines virtuelles. 
</para>
            </listitem>
            <listitem>
              <para>
La supervision des scripts et des machines virtuelles
</para>
            </listitem>
            <listitem>
              <para>
La suspension des machines virtuelles lorsque les tâches qu'elles exécutent sont terminées.
</para>
            </listitem>
          </itemizedlist>
</para>
        <para>
La prise en charge de ces fonctionnalités nécessite un ensemble de paramètres de configuration supplémentaires. 
Ces paramètres sont singuliers pour la gestion de ressources virtuelles et ne s'appliquant pas aux batch schedulers traditionnels. 
C'est pour cela qu'il sont définis en dehors du fichier de configuration principal pour mieux gérer leur caractère optionnel tout 
en simplifiant la configuration de l'ensemble. 
Deux étapes simples sont nécessaires pour configurer l'intégration avec Deltacloud. 
Dans un premier temps, vous devez spécifier dans le fichier de configuration principal que le batch scheduler 
sous-jacent est Deltacloud (<emphasis>batchSchedulerType=DELTACLOUD</emphasis>). Et, ensuite, 
définir les paramètres spécifiques pour la gestion de ressources virtuelles.
</para>
        <para>
Ces paramètres, listés ci-dessous, sont définis au niveau global par l'administrateur et peuvent etre surpassés par des options 
spécifiques définies par l'utilisateur lors de la soumission d'une tâche. Voir le manuel utilisateur pour plus de détails:
<itemizedlist>
            <listitem>
              <para>
Les variables d'environnements.
</para>
              <para>
Définies sur la machine où est lancé le SeD TMS, ces variables sont :
<itemizedlist>
                  <listitem>
                    <para>
VISHNU_CLOUD_ENDPOINT : Définit l'url d'accès à l'API Delatcloud. 
</para>
                    <para>
Ex. <emphasis>VISHNU_CLOUD_ENDPOINT=http://192.168.1.1:3001/api</emphasis> indique que l'API Delatcloud est accessible via le port 3001 de la machine ayant l'adresse IP 192.168.1.1, à noter le contexte /api qui est obligatoire. Ceci suppose que sur cette machine <emphasis>deltacloudd</emphasis> a été démarrée pour écouter sur ce port. 
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_USER : Définit la chaine de connexion au gestionnaire de ressources virtuelles. 
En général cela correspond au login de l'utilisateur. Cependant, pour OpenStack, ceci est une chaine sous la forme 
<emphasis>user+tenant</emphasis>. Où <emphasis>user</emphasis> et <emphasis>tenant</emphasis> désignent respectivement le login de l'utilisateur et le nom du tenant auquel il appartient. 
</para>
                    <para>
Ex. <emphasis>VISHNU_CLOUD_USER=bob+sysfera</emphasis> définit la chaine de connexion pour l'utilisateur bob du tenant sysfera.
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_USER_PASSWORD : Définit le mot de passe à associer à la chaine de connexion. 
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_VM_IMAGE : Définit l'identifiant de l'image à utiliser pour instancier les machines virtuelles. 
Cette valeur doit être valide et correspondre à une image que l'utilisateur défini par VISHNU_CLOUD_USER a le droit d'instancier.
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_VM_USER : Définit l'identifiant de l'utilisateur sous lequel les tâches seront exécutées au sein des machines virtuelles. Cet identifiant n'est pas crée par VISHNU, il doit donc correspondre à un identifiant réel au sein de la machine virtuelle. 
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_VM_USER_KEY : Ce paramètre définit le nom de la clé SSH à déployer dans les machines virtuelles. La valeur doit correspondre à une clé enregistrée dans le gestionnaire de cloud. 
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_DEFAULT_FLAVOR : Définit la flavor par défaut des machines virtuelles. Idem, cette valeur doit correspondre à une
flavor définie dans le gestionnaire de cloud. 
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_NFS_SERVER : Définit l'adresse du serveur NFS sur lequel sont stockées les données des applications s'exécutant au sein des machines virtuelles.
</para>
                  </listitem>
                  <listitem>
                    <para>
VISHNU_CLOUD_NFS_MOUNT_POINT : Désigne le point de montage sur le serveur NFS.
</para>
                  </listitem>
                </itemizedlist>
</para>
            </listitem>
            <listitem>
              <para>
Le fichier <emphasis>.vishnurc</emphasis>
</para>
              <para>
Si définit dans le dossier personnel de l'utilisateur sous lequel s'exécute le SeD TMS, ce fichier est lu à chaque soumission de tâche pour surpasser les valeurs des paramètres définies via les variables d'environnement. Dans ce fichier, les paramètres sont définis sous-forme <emphasis>clé=valeur</emphasis>, avec une entrée par ligne. Voir l'exemple ci-dessous. Les lignes commençant par 
dièse '#' sont des commentaires.
</para>
            </listitem>
          </itemizedlist>
</para>
      </section>
    </section>
    <section>
      <title>Déploiement dans un même sous-réseau</title>
      <para>Dans cette section nous supposons que tous les composants vont être déployés sur une même machine nommée
<emphasis role="bold">prefrontale</emphasis>.
</para>
      <para><emphasis role="bold">NOTES :</emphasis> Il existe un bug connu sur debian (entre autre) avec boost file system, utilisé par VISHNU.
Le rapport de bug est ici et le bug est actuellement ouvert: https://svn.boost.org/trac/boost/ticket/4688.
Si lors du lancement d'un SeD, le message d'erreur suivant apparait : std::runtime_error:
locale::facet::_S_create_c_locale name not valid,
faire un &quot;export LANG=C&quot; et cela devrait régler le problème.
</para>
      <para>Une fois la configuration des différents composants terminée, suivez
attentivement les étapes suivantes pour les déployer:</para>
      <orderedlist>
        <listitem>
          <para>Vérifier que la base de données (PostGreSQL ou MySQL) a été bien configurée et initialisée comme
décrit précédemment. De plus, vérifier que vous pouvez vous connecter à la base de données depuis les différents
serveurs où sont installés les modules de VISHNU.</para>
        </listitem>
        <listitem>
          <para>
Sur une machine Torque, lancer le serveur (pbs_serv), le scheduler (pbs_sched) et l'ordonnanceur
(pbs_mom).
</para>
        </listitem>
        <listitem>
          <para>
Sur une machine SLURM, lancer les serveurs <emphasis>slurmd, slurmctld</emphasis> et <emphasis>slurmdbd</emphasis>.
</para>
        </listitem>
        <listitem>
          <para>
Sur une machine LSF, lancer les exécutables <emphasis/>hostsetup <emphasis>lsfstartup</emphasis>.
</para>
        </listitem>
        <listitem>
          <para>
Sur une machine Grid Engine, lancer les exécutables <emphasis>sge_qmaster </emphasis> et <emphasis>sge_execd</emphasis>.
</para>
        </listitem>
        <listitem>
          <para>
Optionnel: Sur une machine lancer le dispatcher, le fichier de
configuration 'config' doit être à la fin et est optionnel.</para>
          <para>$ <emphasis>dispatcher dispatcher_config.cfg</emphasis></para>
          <para>
Dans cette commande, on demande au dispatcher de démarrer en
utilisant les serveurs définis dans le fichier 'config'. Si le
fichier de configuration n'est pas fourni, des options par défaut sont utilisées. Les différents options de configurations et leur valeur par défaut sont décrites deux sections plus loin.
</para>
        </listitem>
        <listitem>
          <para>Sur chaque machine serveur, lancer supervisord avec son fichier de configuration 'config' correspondant. Le fichier de configuration de supervisord contient le démarrage de chaque serveur vishnu sur la machine en question.</para>
          <para>$ <emphasis>supervisord -c config</emphasis></para>
        </listitem>
        <listitem>
          <para>
Les modules de VISHNU sont prêts à être utilisés. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen des commandes UMS, TMS, FMS et IMS (voir le manuel de l'utilisateur VISHNU pour plus d'informations sur les commandes utilisateurs disponibles).
</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Le cas multi-réseaux</title>
      <para>
Le cas multi-réseaux ne change pas du cas précédent, les étapes sont toutes les mêmes. Le seul ajout à faire est d'ajouter des tunnels SSH entre les machines serveurs et la machine ou se trouve la base de données s'il n'y a pas d'accès direct sur le port correspondant au port de la base de données, et un second tunnel pour l'enregistrement des serveurs sur le dispatcher. Par la suite, il est conseillé d'utiliser le dispatcher pour que le client n'ait plus qu'à se connecter au dispatcher pour réaliser ses requêtes (le dispatcher jouant alors un rôle de proxy entre le client et les réseaux).</para>
      <para>
Les tunnels SSH sont faits avec une commande similaire à l'une des suivantes:
<itemizedlist>
          <listitem>
            <para>
ssh -fN -L 8889:localhost:8889 machine_distance
</para>
            <para>
Etablir un tunnel entre la machine locale et la machine distante au travers du port 8889.
</para>
          </listitem>
          <listitem>
            <para>
            </para>
            <para>
Etablir un reverse tunnel entre la machine locale et la machine distante au travers du port 8889
ssh -R -fN 8889:localhost:8889 machine_distante
</para>
          </listitem>
        </itemizedlist>
</para>
    </section>
    <section>
      <title>Configuration de l'envoi des emails par VISHNU</title>
      <para>Le processus UMS SeD utilise le fichier 'sendmail.py' (fourni dans l'installation VISHNU, dans le sous-répertoire sbin/)
pour envoyer des emails aux utilisateurs lors de certaines opérations. Ce fichier peut être modifié par l'administrateur afin
de s'adapter à la méthode d'envoi d'email propre au serveur sur lequel est installé le SeD. Par défaut, la configuration
fournie se connecte sur le serveur SMTP de 'localhost' sur le port 25, sans authentification.</para>
      <para>Les paramètres suivants peuvent être configurés dans le script sendmail.py :</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colwidth="2cm"/>
          <colspec colwidth="15cm"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Ligne du script sendmail.py à modifier</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><para>login</para></entry>
              <entry><programlisting>parser.add_option(&quot;--login&quot;, dest=&quot;login&quot;, help=&quot;&quot;, default=&quot;[login_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>password</para></entry>
              <entry><programlisting>parser.add_option(&quot;--password&quot;, dest=&quot;password&quot;, help=&quot;smtp password&quot;, default=&quot;[password_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>hostname</para></entry>
              <entry><programlisting>parser.add_option(&quot;--hostname&quot;, dest=&quot;host&quot;, help=&quot;smtp host&quot;, default=&quot;[nom_serveur_SMTP]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>port</para></entry>
              <entry><programlisting>parser.add_option(&quot;--port&quot;, dest=&quot;port&quot;, help=&quot;smtp port [default: 25]&quot;, type=int, default=&quot;[no_port]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>SSL</para></entry>
              <entry><programlisting>parser.add_option(&quot;--ssl&quot;, action=&quot;store_true&quot;, dest=&quot;use_ssl&quot;, help=&quot;enable ssl support [default: %default - default port: 587
]&quot;, default=True)</programlisting></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>Configuration des clés privées/publiques ssh requises pour FMS</title>
      <para>
Toutes les commandes éxécutées par le SeD FMS sont lancées via ssh
sous le nom de l'utilisateur ayant émis la requête. Les services FMS
sont de deux types : il y a ceux qui n'impliquent qu'une machine
distante : Exemple getFilesInfo,listDir,etc.. et ceux qui impliquent au
moins deux machines distantes : machine source et destination pour les transferts de fichiers.
<itemizedlist>
          <listitem>
            <para>Dans le premier cas le SeD se connecte sur la machine distante et
effectue la commande. Par conséquent la clé publique du SeD doit
être ajoutée au fichier authorized_keys ($HOME/.ssh/authorized_keys) de l'utilisateur de la machine distante
concernée.</para>
          </listitem>
          <listitem>
            <para>Dans le second cas, deux connexions ssh sont nécessaires. Le SeD se connecte sur la machine source et
lance le transfert (seconde connexion) vers la machine destination. Par conséquent:
<itemizedlist>
                <listitem>
                  <para>la clé publique du SeD doit être ajoutée au fichier authorized_key de la machine source pour
permettre la première connexion.
</para>
                </listitem>
                <listitem>
                  <para>La machine source doit pouvoir se connecter sur la machine destination par ssh, avec la clé privée enregistrée dans la base de VISHNU lors de l'ajout du compte (local account) liant la machine source à VISHNU. Par ailleurs si le mécanisme d'agent forwarding (de ssh) est activée entre ces différentes machines, il n'est alors plus nécessaire qu'il y ait un autre couple de clés entre la machine source et destination. </para>
                </listitem>
              </itemizedlist>
</para>
          </listitem>
        </itemizedlist>
En somme, il est alors obligatoire que la clé publique du SeD soit ajoutée à tous les comptes utilisateurs des machines impliquées
par les requêtes FMS. Toutes les clés protégées par des passphrases
devront être stockées par un agent ssh pour permettre les
authentifications automatiques.
</para>
    </section>
    <section>
      <title>Configuration des clés privées/publiques ssh requises pour TMS</title>
      <para>
Les commandes de soumission, d'annulation et de récupération des résultats de jobs éxécutées par le SeD TMS sont lancées via ssh
sous le nom de l'utilisateur ayant émis la requête. Pour pouvoir exécuter ces commandes correctement, la clé publique du compte dédié au SeD TMS doit
être ajoutée au fichier authorized_keys ($HOME/.ssh/authorized_keys) de l'utilisateur. Toutes les clés protégées par des passphrases
devront être stockées par un agent ssh pour permettre les
authentifications automatiques.
</para>
    </section>
    <section>
      <title>Test d'exécution d'un service depuis une machine client par shell</title>
      <orderedlist>
        <listitem>
          <para>
Une fois que la plateforme a été installée, se mettre sur un poste client avec VISHNU d'installé. Se référer au document [VISHNU_USERMANUAL]
pour l'installation de la partie client.
</para>
        </listitem>
        <listitem>
          <para>
Exporter la variable d'environnement VISHNU_CONFIG_FILE dans un script de configuration client. Se référer
au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu d'un fichier client.
</para>
        </listitem>
        <listitem>
          <para>Ouvrir une session VISHNU</para>
          <para>$ <emphasis>vishnu_connect -u user</emphasis></para>
          <para>Remplacer 'user' par un vrai identifiant utilisateur.
Par défaut, VISHNU est installé avec un utilisateur 'root' ayant tous les droits sur la plateforme (ID: 'root', Mot de passe: 'vishnu_user').
</para>
        </listitem>
        <listitem>
          <para>
Entrer le mot de passe puis valider
</para>
        </listitem>
        <listitem>
          <para>
Sur le client, un affichage doit signaler que le service a réussi. Dans le terminal ou le SeD UMS a été lancé et dans le terminal ou le MA tourne, selon le niveau de verbosité, plus ou moins d'informations, concernant le service effectué, doivent apparaitre. Le message affiché contient au moins une ligne similaire :
<emphasis role="bold">sessionId: root-2011-Jul-11-14:22:14.403491:86690</emphasis>, qui indique l'identifiant de la session ouverte.
</para>
        </listitem>
        <listitem>
          <para>Fermer la session.</para>
          <para>$ <emphasis>vishnu_close</emphasis> </para>
          <para>Aucune erreur ne doit être remontée.</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Les scripts de démarage automatique</title>
      <para>Des scripts de démarage sont préparés pour pouvoir exécuter automatiquement les serveurs VISHNU.
Les scripts sont installés lors de l'installation des serveurs dans install/etc/ (ou dans /etc si c'est installé dans /usr).</para>
    </section>
  </chapter>
  <chapter>
    <title>Administration</title>
    <section>
      <title>Présentation</title>
      <para>
Le module UMS correspond à la gestion des utilisateurs et des machines de VISHNU. Il permet aussi de sauvegarder la configuration de VISHNU à chaud et de la restaurer si besoin est.
Dans toute la suite du chapitre, on supposera que l'utilisateur est déjà connecté avec un compte administrateur de VISHNU pour pouvoir réaliser ces manipulations. De plus, on présentera l'utilisation des commandes depuis le shell, mais cela reste valable depuis les API Python ou C++.
</para>
      <para>L'API est disponible dans le document [VISHNU_API]</para>
    </section>
    <section>
      <title>Gestion des utilisateurs (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
L'ajout d'un utilisateur se fait à l'aide de la commande 'vishnu_add_user'. Elle prend en paramètre le prénom de l'utilisateur, son nom de famille, les droits qui lui sont associés dans VISHNU (administrateur ou simple utilisateur) et son adresse de couriel. Tout ces paramètres sont obligatoires. Un privilège à 1 signifie administrateur, un privilège à 0 signifie un utilisateur. L'identifiant de l'utilisateur est généré et renvoyé.
</para>
        </listitem>
        <listitem>
          <para>
La mise à jour d'un utilisateur ne peut être faite que par un administrateur. Cette mise à jour se fait avec un appel à la commande 'vishnu_update_user' et permet de modifier les paramètres de l'ajout (nom, prénom, statut, couriel).
Il faut avoir l'identifiant de l'utilisateur (généré lors de la création de l'utilisateur) pour le désigner lors de la mise à jour.
</para>
          <para>Note : le changement du statut d'un utilisateur à l'état &quot;INACTIVE&quot; correspond à un blocage de son compte.</para>
        </listitem>
        <listitem>
          <para>
La suppression d'un utilisateur efface toutes les informations liées à l'utilisateur de la base de donnée. Cette suppression se fait à l'aide de la commande 'vishnu_delete_user'.
</para>
        </listitem>
        <listitem>
          <para>
La liste des utilisateurs ne peut être faite que par un administrateur. Cela se fait avec la commande 'vishnu_list_user'. Cette commande peut prendre en paramètre l'identifiant d'un utilisateur pour n'avoir les informations que concernant cet utilisateur.
</para>
        </listitem>
        <listitem>
          <para>
Seul un administrateur peut réinitialiser le mot de passe d'un utilisateur de VISHNU. Pour ce faire, il doit appeller la commande 'vishnu_reset_password' en fournissant l'identifiant de l'utilisateur dont l'administrateur veut réinitialiser le mot de passe. Le nouveau mot de passe est temporaire et renvoyé par la commande. Lors de la prochaine connexion, l'utilisateur devra changer son mot de passe avec 'vishnu_change_password'.
</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des machines (UMS+IMS)</title>
      <orderedlist>
        <listitem>
          <para>L'ajout d'une machine se fait à l'aide de la commande 'vishnu_add_machine'. Cette commande prend en paramètre le nom de la machine, le site ou elle se trouve, le language de la description qui sera donnée pour la machine, le fichier contenant la clé publique et la description. Ces paramètres sont obligatoires, en passant par le shell, la description n'a pas besoin d'être fournie en paramètre mais elle est alors demandée à l'administrateur avant d'ajouter la machine. A la fin de l'ajout, l'identifiant généré pour la machine est renvoyé.</para>
        </listitem>
        <listitem>
          <para>
La mise à jour d'une machine se fait à l'aide de la commande 'vishnu_update_machine' et permet de modifier les paramètres mis lors de l'ajout de la machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
</para>
          <para>Note : le changement du statut d'une machine à l'état &quot;INACTIVE&quot; correspond à un blocage de la machine. Cela rend la machine inaccessible aux utilisateurs de VISHNU mais toujours visible pour les administrateurs.</para>
        </listitem>
        <listitem>
          <para>
La suppression d'une machine se fait à l'aide de la commande 'vishnu_delete_machine' avec l'identifiant de la machine à supprimer. Cela supprime la machine de la base de données, ainsi que toutes les informations qui y sont attachées (Attention : cette commande est irréversible).
</para>
        </listitem>
        <listitem>
          <para>
Les utilisateurs peuvent lister les machines, mais un administrateur a en plus une option qui est l'identifiant d'un utilisateur. Ceci lui permet de lister les machines sur lesquelles l'utilisateur a un compte VISHNU.
</para>
        </listitem>
        <listitem>
          <para>
La mise à jour d'informations système d'une machine se fait à l'aide de la commande 'vishnu_set_system_info' et permet d'ajouter ou modifier des informations système d'une machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion de la plateforme (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
L'administrateur peut faire une sauvegarde à chaud à un moment donné de VISHNU. Ceci sauvegarde les utilisateurs, les machines et les comptes des utilisateurs. Le fichier, dans lequel la configuration est, est retourné par la fonction. La fonction est 'vishnu_save_configuration', pas besoin de paramètres.
</para>
        </listitem>
        <listitem>
          <para>
L'administrateur peut recharger une configuration précédente de VISHNU à l'aide de la commande 'vishnu_restore_configuration' qui a besoin du fichier de sauvegarde pour recharger la base.
Avant de pouvoir lancer cette restauration, tous les utilisateurs de VISHNU doivent être déconnectés.
</para>
        </listitem>
        <listitem>
          <para>
Un administrateur peut également définir les valeurs par défaut des options de VISHNU pour tout les utilisateurs (ces options sont le temps de déconnexion par défaut et le type de fermeture d'une session par défaut). Cela se fait en appellant 'vishnu_configure_default_option' en donnant le nom de l'option et sa nouvelle valeur.
</para>
        </listitem>
        <listitem>
          <para>
Un administrateur peut ajouter ou modifier un système d'authentification. Par exemple il peut ajouter différents LDAP pour authentifier ses utilisateurs. Actuellement, pour un même LDAP, si les utilisateurs sont dans des branches différentes il faut ajouter un système d'authentification par branche. Ceci afin de faciliter la connexion de l'utilisateur, pour qu'il ne donne aucune information concernant son arbre LDAP, juste son login. C'est l'administrateur lorsqu'il crée son système d'authentification qui doit remplir le champs ldapbase avec le chemin complet dans l'arbre LDAP à utiliser pour authentifier un utilisateur. Lorsqu'un administrateur rempli le chemin menant aux utilisateurs, il doit remplacer le nom de l'utilisateur par la chaîne de caractère \$USERNAME, cette chaîne sera remplacée par vishnu par le login de l'utilisateur que l'on cherche à authentifier.
Fonctions associées : vishnu_add_auth_system, vishnu_update_auth_system, vishnu_delete_auth_system
</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Options propres à l'administrateur dans les commandes utilisateurs(UMS+FMS)</title>
      <orderedlist>
        <listitem>
          <para>Dans la fonction 'vishnu_connect', un administrateur peut donner l'identifiant d'un utilisateur pour se connecter sous le nom de cet utilisateur dans VISHNU.</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_list_history_cmd', l'administrateur peut lister toutes les commandes de tout les utilisateurs ou les commandes d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_list_local_accounts', l'administrateur peut lister toutes les comptes de tout les utilisateurs ou les comptes d'un utilisateur particulier en fournissant l'identifiant de l'utilisateur.
</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_list_options', l'administrateur peut lister les toutes les options de tout les utilisateurs ou les options d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_list_sessions', l'administrateur peut lister les toutes les sessions de tous les utilisateurs ou les sessions d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou les sessions sur une machine particulière en fournissant l'identifiant de la machine.
</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_list_file_transfers', l'administrateur peut lister tous les transferts de fichiers de tous les utilisateurs ou ceux d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou lister les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
</para>
        </listitem>
        <listitem>
          <para>
Dans la fonction 'vishnu_stop_file_transfers', l'administrateur peut annuler tous les transferts de fichiers de tous les utilisateurs ou ceux d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou annuler les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des processus VISHNU et délestage (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>
L'administrateur peut lister les processus VISHNU, sur toute la plateforme ou sur une machine particulière.
Fonction associée : vishnu_get_processes.
</para>
        </listitem>
        <listitem>
          <para>
L'administrateur peut arrêter un processus VISHNU, ce processus ne sera pas redémarrer automatiquement.
Attention : l'administrateur doit avoir un compte sur la machine.
Fonction associée : vishnu_stop 
</para>
        </listitem>
        <listitem>
          <para>
L'administrateur peut redémarrer un processus VISHNU sur une machine, ce processus doit avoir déjà tourné
pour VISHNU sur cette machine et l'administrateur doit avoir un compte sur la machine.
Fonction associée : vishnu_restart 
</para>
        </listitem>
        <listitem>
          <para>L'administrateur peut délester une machine selon deux modes. Dans le mode HARD, tout les processus VISHNU
de la machine sont arretés. Dans le mode SOFT, seul FMS et TMS sont touchés, on arrête tout leurs transferts
et jobs en cours.
Fonction associée : vishnu_load_shed </para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Surveillance de l'état des machines (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>Un administrateur peut fixer la fréquence de mise à jour de l'enregistrement de l'état des machines.
Fonction associée : vishnu_set_update_frequency</para>
        </listitem>
        <listitem>
          <para>Un administrateur peut obtenir la fréquence de mise à jour de l'enregistrement de l'état des machines.
Fonction associée : vishnu_get_update_frequency</para>
        </listitem>
        <listitem>
          <para>Un administrateur peut fixer un seuil sur une machine. Ce seuil peut être l'utilisation du CPU, la
mémoire libre restante ou l'espace disque restant. Lors de l'enregistrement de l'état d'une machine,
si un seuil est atteint sur cette machine, l'administrateur est notifié par mail de ce dépassement.
Fonction associée : vishnu_set_threshold</para>
        </listitem>
        <listitem>
          <para>Un administrateur peut obtenir les seuils fixés sur une machine. Pour plus d'informations sur les seuils
voir la partie pour fixer les seuils ci-dessus.
Fonction associée : vishnu_get_threshold</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Définition des formats des identifiants (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>
Un administrateur peut fixer le format des identifiants VISHNU automatiquement générés pour les utilisateurs,
les machines, les jobs soumis aux batchs scheduler et les transferts de fichiers. Ces identifiants peuvent contenir
plusieurs variables :
<itemizedlist>
              <listitem>
                <para>
'$DAY' : Variable qui sera remplacée par le jour de création (1-31)
</para>
              </listitem>
              <listitem>
                <para>
'$MONTH' : Variable qui sera remplacée par le mois de création (1-12)
</para>
              </listitem>
              <listitem>
                <para>
'$YEAR' : Variable qui sera remplacé par l'année de création (0-99)
</para>
              </listitem>
              <listitem>
                <para>
'$CPT' : Variable compteur qui est automatiquement incrémentée
</para>
              </listitem>
              <listitem>
                <para>
'$SITE' : Pour les utilisateurs ou machine, une information sur le lieu
</para>
              </listitem>
              <listitem>
                <para>
'$UNAME' : Pour les utilisateurs, variable remplacée par le nom de l'utilisateur
</para>
              </listitem>
              <listitem>
                <para>
'$MANAME' : Pour les machines, variable remplacée par le nom de la machine
</para>
              </listitem>
            </itemizedlist>
Attention la variable compteur est obligatoire pour éviter la génération d'un identifiant déjà existant.
Fonctions associées : define_file_format, define_machine_format, define_task_format, define_user_format, define_auth_format.
</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>FAQ</title>
      <itemizedlist>
        <listitem>
          <para>Si vous rencontrez des problèmes lors du chargement des plugins TMS, vous pouvez configurez la variable d'environnement <emphasis
                role="italic">LD_LIBRARY_PATH</emphasis> pour pointer sur le répertoire contenant les plugins.</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <chapter>
    <title>Tests</title>
    <para>
Les tests automatiques permettent de valider les fonctionnalités de VISHNU
et de garantir la non régression lors des développements. Le module de
test peut être activé au moment de la construction de VISHNU, en activant
la variable Cmake BUILD_TESTING. Le module de test sera donc compilé avec
les sources de vishnu.
</para>
    <section>
      <title>Tests unitaires</title>
      <para>
un certain nombre de tests unitaires sont fournis avec VISHNU. Lorsque
vous compilez VISHNU avec BUILD_TESTING, ces tests sont construits et
présents dans le sous-répertoire bin de votre répertoire de build. Les
tests unitaires ont tous un nom terminant par UnitTests. Pour les
lancer, il suffit juste d'appeler le binaire. Pour voir les options
qu'il est possible de leur passer, vous pouvez lancer le binaire avec
l'option --help (ce sont les options du framework boost tests).
</para>
      <para>
Ces tests ne nécessitent pas d'avoir une plateforme VISHNU déployée.
</para>
    </section>
    <section>
      <title>Configuration des tests fonctionnels</title>
      <para>
Lorsque
vous compilez Vishnu avec BUILD_TESTING, ces tests sont construits et
présents dans le sous-répertoire bin de votre répertoire de build. Les
tests fonctionnels ont tous un nom qui suit la nomenclature suivante:
&lt;nom du module>_automTest&lt;numéro> (e.g., fms_automTest11
pour la suite de test 11 du module FMS). Pour les
lancer, il suffit juste d'appeler le binaire. Pour voir les options
qu'il est possible de leur passer, vous pouvez lancer le binaire avec
l'option --help (ce sont les options du framework boost tests)
</para>
      <para>
Ces tests, contrairement aux tests unitaires, nécessitent d'avoir une
plateforme VISHNU déployée. L'administrateur doit fournir un ensemble de
paramètres d'exécutions liés à la plateforme de test. Il est nécessaire
de positionner 2 variables d'environnement.
</para>
      <section>
        <title>Variables d'environnement et options de configuration</title>
        <itemizedlist>
          <listitem>
            <para>
VISHNU_CLIENT_TEST_CONFIG_FILE : Variable qui contient le chemin
vers le fichier de configuration client. Ce fichier permet au
client VISHNU de se connecter à la plateforme (voir le manuel
utilisateur pour plus d'informations sur la configuration de ce fichier).
</para>
          </listitem>
          <listitem>
            <para>
VISHNU_TEST_SETUP_FILE : Variable qui contient le chemin vers le
fichier de données de description de la plateforme. Ce fichier
permet aux tests automatiques de s'exécuter sur la plateforme. Ce
fichier doit contenir un ensemble de paramètres :
</para>
            <itemizedlist>
              <listitem>
                <para>TEST_UMS_AUTHEN_TYPE : Contient le type de système d'authentification de la plateforme de test; </para>
              </listitem>
              <listitem>
                <para>TEST_VISHNU_MACHINEID1 : Contient l'identifiant d'une machine VISHNU sur laquelle les tests UMS vont être exécutés; </para>
              </listitem>
              <listitem>
                <para>TEST_WORKING_DIR : Contient le chemin vers le répertoire de travail local des tests; </para>
              </listitem>
              <listitem>
                <para>TEST_ROOT_VISHNU_LOGIN : Contient le login VISHNU de l'utilisateur ROOT de la plateforme. L'utilisateur ROOT a les droits administrateur et a un Local Account sur chacune des machines de test; </para>
              </listitem>
              <listitem>
                <para>TEST_ROOT_VISHNU_PWD : Contient le mot de passe VISHNU de l'utilisateur ROOT de la plateforme; </para>
              </listitem>
              <listitem>
                <para>TEST_ADMIN_VISHNU_LOGIN : Contient le login VISHNU de l'administrateur de la plateforme. L'administrateur est un utilisateur qui a les droits administrateur et qui n'a aucun Local Account sur aucune des machines de test; </para>
              </listitem>
              <listitem>
                <para>TEST_ADMIN_VISHNU_PWD : Contient le mot de passe VISHNU de l'administrateur de la plateforme; </para>
              </listitem>
              <listitem>
                <para>TEST_USER_VISHNU_LOGIN : Contient le login VISHNU de l'utilisateur de test de la plateforme. L'utilisateur doit avoir un Local Account sur chacune des machines de test. Tout les test FMS et TMS sont exécutés en tant que l'utilistaeur TEST_USER_VISHNU_LOGIN; </para>
              </listitem>
              <listitem>
                <para>TEST_USER_VISHNU_PWD : Contient le mot de passe VISHNU de l'utilisateur de test de la plateforme; </para>
              </listitem>
              <listitem>
                <para>TEST_FMS_HOST1 : Contient l'identifiant de la première machine VISHNU sur laquelle les tests FMS vont être exécutés;</para>
              </listitem>
              <listitem>
                <para>TEST_FMS_HOST2 : Contient l'identifiant de la deuxième machine VISHNU sur laquelle les tests FMS vont être exécutés; </para>
              </listitem>
              <listitem>
                <para>TEST_FMS_HOST1_WORKING_DIR : Contient le chemin vers le répertoire de travail distant des tests FMS sur la machine TEST_FMS_HOST1. Ce répertoire accessible en lecture et ecriture par le Local Account de l'utilisateur TEST_USER_VISHNU_LOGIN sur la machine TEST_FMS_HOST1; </para>
              </listitem>
              <listitem>
                <para>TEST_FMS_HOST2_WORKING_DIR : Contient le chemin vers le répertoire de travail distant des tests FMS sur la machine TEST_FMS_HOST2. Ce répertoire accessible en lecture et ecriture par le Local Account de l'utilisateur TEST_USER_VISHNU_LOGIN sur la machine TEST_FMS_HOST2; </para>
              </listitem>
              <listitem>
                <para>TEST_FMS_USER_LOCAL_GROUP : Contient le groupe UNIX du Local Account de l'utilisateur TEST_USER_VISHNU_LOGIN sur la machine TEST_FMS_HOST1; </para>
              </listitem>
              <listitem>
                <para>TEST_TMS_MACHINE_IDS : Contient la liste des machines TMS sur lesquelles les tests TMS vont êtres exécutés. Cette liste est constituée des couples: &quot;&lt;identifiant de machine> &lt;batch scheduler>&quot;, séparé par des point-virgule. Exemple &quot;TEST_TMS_MACHINE_IDS=machine_1 SLURM;machine_2 TORQUE&quot; </para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Exemple de fichier de configuration</title>
        <programlisting>
<![CDATA[
# This is a sample setup file for VISHNU tests
# Copyright (c) SysFera SA
# Last update: 04/02/2013
#


# Definitions
# FMS: File Management System
# IMS: Information Management System
# TMS: Task Management System
# UMS: User Management System


###############################################################################
#               Common Parameters                                             #
###############################################################################
TEST_VISHNU_MACHINEID1=machine_1
TEST_WORKING_DIR=/home/absila/machine_1
TEST_ROOT_VISHNU_LOGIN=root
TEST_ROOT_VISHNU_PWD=vishnu_user
TEST_ADMIN_VISHNU_LOGIN=admin_1
TEST_ADMIN_VISHNU_PWD=admin
TEST_USER_VISHNU_LOGIN=user_1
TEST_USER_VISHNU_PWD=toto


###############################################################################
#                UMS Related Parameters                                       #
###############################################################################
TEST_UMS_AUTHEN_TYPE=UMS

###############################################################################
#                FMS Specfic Parameters                                       #
###############################################################################
TEST_FMS_HOST1=machine_1
TEST_FMS_HOST2=machine_1
TEST_FMS_HOST1_WORKING_DIR=/home/absila/machine_2
TEST_FMS_HOST2_WORKING_DIR=/home/absila/machine_3
TEST_FMS_USER_LOCAL_GROUP=test;

###############################################################################
#                TMS Related Parameters                                       #
###############################################################################
TEST_TMS_MACHINE_IDS=machine_1 SLURM;machine_2 TORQUE

]]>
</programlisting>
      </section>
      <section>
        <title>Prérequis</title>
        <para>
Afin que les tests automatiques s'exécutent, la plateforme Vishnu doit
être fonctionnelle et les variable d'environnement renseignées. Tous
les paramètres du fichier VISHNU_TEST_SETUP_FILE doivent être
renseignés.
</para>
        <para>
Les différentes machines de test peuvent être une seule et même machine (l'exemple de fichier ci-dessus fait référence à une seule machine).
</para>
      </section>
      <section>
        <title>Rapport de test </title>
        <para>
Les tests automatiques génèrent des rapports résumant le déroulement
du test ainsi que les résultats. Ces rapports peuvent être générés en
XML, pour cela il faut exécuter la commande suivante : &quot;make
test_name-xml&quot; en remplaçant test_name par le nom du test à exécuter
(e.g., fms_automTest1). Ce format XML est pratique pour intégrer les
résultats de test dans votre environnement d'intégration continue tel
que Jenkins.
</para>
      </section>
    </section>
  </chapter>
  <reference>
    <title>UMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_user</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>firstname</replaceable></arg><arg choice="plain"><replaceable>lastname</replaceable></arg><arg
              choice="plain"><replaceable>privilege</replaceable></arg><arg choice="plain"><replaceable>email</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the user Jean DUPONT as a simple user and with the mail dupont@gmail.com:</para>
        <para>vishnu_add_user Jean DUPONT 0 dupont@gmail.com</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_user</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-f <replaceable>firstname</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>lastname</replaceable></option></arg><arg
              choice="opt"><option>-p <replaceable>privilege</replaceable></option></arg><arg
              choice="opt"><option>-m <replaceable>email</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-f <replaceable>firstname</replaceable></option></term>
            <listitem>
              <para>represents the updated firstname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>lastname</replaceable></option></term>
            <listitem>
              <para>represents the updated lastname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>privilege</replaceable></option></term>
            <listitem>
              <para>represents the updated privilege of the user.
The value must be an integer. Predefined values are: 0 (USER), 1 (ADMIN).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>email</replaceable></option></term>
            <listitem>
              <para>represents the updated email address of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user (LOCKED or ACTIVE).
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE), 2 (DELETED).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To update the mail address of a user user_1 to jdupont@gmail.com:</para>
        <para>vishnu_update_user -m jdupont@gmail.com user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_user</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>Tu delete the user user_1:</para>
        <para>vishnu_delete_user user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_reset_password</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_reset_password</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_reset_password</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To reset the password of the user user_1:</para>
        <para>vishnu_reset_password user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_save_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_save_configuration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_save_configuration</command><arg choice="opt"><option>-h</option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To save the current configuration:</para>
        <para>vishnu_save_configuration</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restore_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restore_configuration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restore_configuration</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>filePath</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restore the configuration in /tmp/toto.cfg:</para>
        <para>vishnu_restore_configuration /tmp/toto.cfg</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_machine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>site</replaceable></arg><arg
              choice="plain"><replaceable>language</replaceable></arg><arg choice="plain"><replaceable>sshPublicKeyFile</replaceable></arg><arg
              choice="plain"><replaceable>machineDescription</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the machine perceval in paris with the description in french &quot;ceci est une description&quot;  with the public key in /tmp/key.pub:</para>
        <para>vishnu_add_machine perceval paris fr /tmp/key.pub &quot;ceci est une description&quot;</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_machine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>site</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>machineDescription</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>language</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-k <replaceable>sshPublicKeyFile</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>represents the name of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>site</replaceable></option></term>
            <listitem>
              <para>represents the location of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>machineDescription</replaceable></option></term>
            <listitem>
              <para>represents the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>language</replaceable></option></term>
            <listitem>
              <para>represents the language used for the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the machine.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE), 2 (DELETED).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-k <replaceable>sshPublicKeyFile</replaceable></option></term>
            <listitem>
              <para>contains the path to the SSH public key used by VISHNU to access local user accounts.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the name of the machine whose id is machine_1 to provencal:</para>
        <para>vishnu_update_machine machine_1 -n provencal</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_machine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To delete the machine machine_1:</para>
        <para>vishnu_delete_machine machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_list_users</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_list_users</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_list_users</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-u <replaceable>userId</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>authSystemId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>userId</replaceable></option></term>
            <listitem>
              <para>allows an admin to get information about a specific user identified by his/her userId.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>authSystemId</replaceable></option></term>
            <listitem>
              <para>is an option to list users who have local user-authentication configurations on a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To list all the users:</para>
        <para>vishnu_list_users</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_configure_default_option</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_configure_default_option</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_configure_default_option</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>optionName</replaceable></arg><arg choice="plain"><replaceable>value</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command. The current supported options are VISHNU_CLOSE_POLICY (how to close the session), VISHNU_TIMEOUT (timeout before closing a session automatically), VISHNU_TRANSFER_CMD (to use rsync or scp in FMS)</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To configure the option VISHNU_TIMEOUT with the value 42:</para>
        <para>vishnu_configure_default_option VISHNU_TIMEOUT 42</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_auth_system</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>URI</replaceable></arg><arg
              choice="plain"><replaceable>authLogin</replaceable></arg><arg choice="plain"><replaceable>authPassword</replaceable></arg><arg
              choice="plain"><replaceable>userPasswordEncryption</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add an LDAP's user-authentication system on VISHNU named CLAMART with the parameters which follows: URI ldap://127.0.0.1:389/ , login cn=ldapadmin,dc=sysfera,dc=fr, password secret and DN root entry dc=sysfera,dc=fr: </para>
        <para>vishnu_add_auth_system CLAMART ldap://127.0.0.1:389/ cn=ldapadmin,dc=sysfera,dc=fr secret 0 0 -b uid=\$USERNAME,ou=users,dc=sysfera,dc=fr </para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_auth_system</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-u <replaceable>authLogin</replaceable></option></arg><arg
              choice="opt"><option>-w <replaceable>authPassword</replaceable></option></arg><arg
              choice="opt"><option>-e <replaceable>userPasswordEncryption</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>type</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>corresponds to the user-authentication system's name.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>is the URI of the user-authentication systems (by the form host:port for LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>authLogin</replaceable></option></term>
            <listitem>
              <para>is the login used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-w <replaceable>authPassword</replaceable></option></term>
            <listitem>
              <para>is the password used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-e <replaceable>userPasswordEncryption</replaceable></option></term>
            <listitem>
              <para>represents the encryption method used to encrypt user's password.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (SSHA).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>type</replaceable></option></term>
            <listitem>
              <para>represents the type of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE), 2 (DELETED).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the address of a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_update_auth_system -i ldap://192.128.1.1:389/ AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_auth_system</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To remove a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_delete_auth_system AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>User&amp; <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const User&amp; <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::resetPassword</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef><paramdef>string&amp; <parameter>tmpPassword</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::saveConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Configuration&amp; <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restoreConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Machine&amp; <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Machine&amp; <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::listUsers</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListUsers&amp; <parameter>listuser</parameter></paramdef><paramdef>const ListUsersOptions&amp; <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::configureDefaultOption</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const OptionValue&amp; <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command. The current supported options are VISHNU_CLOSE_POLICY (how to close the session), VISHNU_TIMEOUT (timeout before closing a session automatically), VISHNU_TRANSFER_CMD (to use rsync or scp in FMS)</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem&amp; <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const AuthSystem&amp; <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId already exists in the database&quot; [22])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine is locked&quot; [34])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;Trying to lock a user account that is already locked&quot; [24])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, tmpPassword=VISHNU.resetPassword</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword(string)</emphasis></term>
            <listitem>
              <para>The temporary password generated by VISHNU</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.saveConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Configuration <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration saving &quot; [39])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restoreConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration restoring&quot; [40])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machineId already exists in the database&quot; [33])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, listuser=VISHNU.listUsers</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListUsersOptions <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.configureDefaultOption</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>OptionValue <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command. The current supported options are VISHNU_CLOSE_POLICY (how to close the session), VISHNU_TIMEOUT (timeout before closing a session automatically), VISHNU_TRANSFER_CMD (to use rsync or scp in FMS)</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The name of the user option is unknown&quot; [41])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the timeout is incorrect&quot; [43])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the transfer command is incorrect&quot; [44])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is already locked&quot; [49])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_processes</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_processes</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_processes</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-p <replaceable>machineId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the list of the vishnu processes that are running and monitored on machine_1:</para>
        <para>vishnu_get_processes -p machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_info</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_info</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_info</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>memory</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>diskSpace</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>memory</replaceable></option></term>
            <listitem>
              <para>Amount of RAM memory available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>diskSpace</replaceable></option></term>
            <listitem>
              <para>Amount of disk space available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the diskspace size to 300 on machine_1:</para>
        <para>vishnu_set_system_info -d 300 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_threshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>value</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg><arg choice="plain"><replaceable>handler</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set a threshold of type use of the CPU(value=1) of value 99% on machine_1 and handled by the user admin_1:</para>
        <para>vishnu_set_system_threshold 99 machine_1 1 admin_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_system_threshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>machineId</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>metricType</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine where the metric is defined.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>metricType</replaceable></option></term>
            <listitem>
              <para>The type of the metric.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get all the thresholds:</para>
        <para>vishnu_get_system_threshold</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_user_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_user_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_user_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to user_$CPT:</para>
        <para>vishnu_define_user_identifier user_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_machine_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_machine_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_machine_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to machine_$CPT:</para>
        <para>vishnu_define_machine_identifier machine_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_job_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_job_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_job_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to job_$CPT:</para>
        <para>vishnu_define_job_identifier job_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_transfer_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_transfer_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_transfer_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_transfer_identifier transfer_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_auth_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_auth_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_auth_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_auth_identifier LDAP_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_load_shed</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_load_shed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_load_shed</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg><arg choice="plain"><replaceable>loadShedType</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To make a hard load shedding on machine_1:</para>
        <para>vishnu_load_shed machine_1 1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_update_frequency</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_update_frequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_update_frequency</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>freq</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the frequency to 100:</para>
        <para>vishnu_set_update_frequency 100</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_stop</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_stop</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To stop the UMS process on machine_1:</para>
        <para>vishnu_stop UMS machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restart</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restart</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restart using the configuration file ums.cfg an UMS sed on machine_1:</para>
        <para>vishnu_restart -v /tmp/ums.cfg -t 1 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_work_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_work_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_work_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to W_$CPT:</para>
        <para>vishnu_define_work_identifier W_\$CPT</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getProcesses</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListProcesses&amp; <parameter>process</parameter></paramdef><paramdef>const ProcessOp&amp; <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemInfo</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const SystemInfo&amp; <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Threshold&amp; <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListThreshold&amp; <parameter>value</parameter></paramdef><paramdef>const ThresholdOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineUserIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineMachineIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineJobIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineTransferIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineAuthIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::loadShed</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const LoadShedType&amp; <parameter>loadShedType</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setUpdateFrequency</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const int&amp; <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::stop</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restart</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineWorkIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, process=VISHNU.getProcesses</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ProcessOp <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemInfo</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>SystemInfo <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Threshold <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, value=VISHNU.getSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ThresholdOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineUserIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineMachineIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineJobIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineTransferIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineAuthIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.loadShed</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>LoadShedType <parameter>loadShedType</parameter></paramdef><paramdef>SupervisorOp <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>IMSVishnuException(&quot;If a component is unavailable&quot; [301])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setUpdateFrequency</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>int <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.stop</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>SupervisorOp <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restart</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>SupervisorOp <parameter>op</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineWorkIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
</book>